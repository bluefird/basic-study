当需要将正运行的Nginx升级，可以在不中断服务的情况下进行，具体步骤如下：

1、使用新的可执行程序替换旧的可执行程序。下载新的Nginx,重新编译到旧版本的安装路径中。重编译之前，先备份一下旧的可执行文件。
2、执行以下指令，他将存储有旧版本主进程ID的文件重命名为.oldbin：

kill -USR2 旧版本的Nginx主进程号

一般情况下是这样的：kill -USR2 `cat /usr/local/nginx/nginx.pid`
 可以用 ls /usr/local/nginx/logs来查看是否改名
3、执行新版本的Nginx可执行程序。
ulimit -SHn 65535
/usr/local/nginx/sbin/nginx
4、此时新旧版本的Nginx会同时运行，共同处理请求。要逐步停止旧版本的Nginx，必须发送WINCH信号给旧的主进程。然后，他的工作进程将从容关闭。
kill -WINCH 旧版本的Nginx主进程号
5、一段时间后，旧的工作进程处理完了所有的请求后退出，仅由新的进程来处理输入请求了。可用下面的命令查看：
ps -ef | grep nginx
6、现在可以决定使用新版本还是恢复到旧版本：
kill -HUP 旧的主进程号 ：Nginx在不重载配置文件的情况下启动他的工作进程
kill -QUIT 新的主进程号  ：从容关闭其工作进程
kill -TERM 新的主进程号 ：强制退出
kill 新的主进程号或旧的主进程号：如果因为某些原因新的工作进程不能退出，则向其发送kill信号
新的主进程退出后，旧的主进程会移除.oldbin后缀，恢复为他的.pid文件，这样，一切就都恢复为升级之前了。
如果尝试升级成功，而自己又希望保留新版本时，可发送QUIT信号给旧的主进程，使其退出而只留下新的进程运行：kill -QUIT 旧主进程号